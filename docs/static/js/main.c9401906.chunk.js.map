{"version":3,"sources":["components/AddCategory.js","components/NavBar.js","components/GifGridList.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["useStyles","makeStyles","root","margin","btn","background","AddCategory","setCategories","setLim","classes","useState","search","setSearch","limit","setLimit","onSubmit","e","preventDefault","trim","length","alert","TextField","id","label","type","name","onChange","target","value","fullWidth","Select","labelId","className","map","lim","MenuItem","key","Button","variant","color","boxShadow","display","justifyContent","alignItems","title","letterSpacing","Nav","AppBar","position","Toolbar","Typography","theme","maxWidth","media","height","paddingTop","borderRadius","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","border","padding","animation","space","marginRight","GifGridList","image","likes","setLikes","disLike","setdisLike","Grid","item","xs","sm","md","xl","Card","CardMedia","loading","CardContent","component","CardActions","disableSpacing","onClick","getGif","categories","a","API_URL","encodeURI","fetch","res","json","data","gifs","images","downsized_large","url","propTypes","PropTypes","string","isRequired","useFetchGifs","state","setState","useEffect","getGits","then","catch","err","console","GifGrid","container","gif","GifExpertApp","NavBar","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9401906.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, TextField, makeStyles, MenuItem, Select } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        margin: '10px 0',\r\n    },\r\n\r\n    btn: {\r\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n        margin: '10px 0',\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst AddCategory = ({ setCategories, setLim }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [limit, setLimit] = useState('12');\r\n    const limits = ['12' ,'15', '30', '50', '70', '90', '100'];\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (search.trim().length !== 0) {\r\n            setCategories(search);\r\n            setLim(limit);\r\n            setSearch('');\r\n            setLimit('12');\r\n        }\r\n        else {\r\n            alert('Enter Something!🤦‍♂️');\r\n        }\r\n    };\r\n\r\n    const onHandleInput= e => setSearch(e.target.value);\r\n    const onHandleSelect = e => setLimit(e.target.value);\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n\r\n            <TextField\r\n                id=\"\"\r\n                label=\"Search🔍\"\r\n                type=\"text\"\r\n                name=\"search\"\r\n                onChange={onHandleInput}\r\n                value={search}\r\n                fullWidth\r\n            />\r\n\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={limit}\r\n                onChange={onHandleSelect}\r\n                fullWidth\r\n                className={classes.root}\r\n            >\r\n            { limits.map( lim => <MenuItem value={lim} key={ lim }> { lim } </MenuItem> ) }\r\n                \r\n            </Select>\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                className={classes.btn}>\r\n                Add\r\n            </Button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n    setLim: PropTypes.func.isRequired,\r\n} \r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\nimport { AppBar, makeStyles, Toolbar, Typography } from '@material-ui/core';\r\nimport GifIcon from '@material-ui/icons/Gif';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n        color: 'white',\r\n        boxShadow: '0 3px 5px 2px #000)',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'flex-start',\r\n    },\r\n\r\n    title: {\r\n        letterSpacing: '5px',\r\n    }\r\n}));\r\n\r\n\r\nconst Nav = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={ classes.root }>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    < GifIcon />  GifExpertApp\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState } from 'react'\r\nimport {\r\n    Grid,\r\n    makeStyles,\r\n    Card,\r\n    CardMedia,\r\n    CardContent,\r\n    CardActions,\r\n    Button,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 450,\r\n        margin: '20px',\r\n    },\r\n    media: {\r\n        height: '500px',\r\n        paddingTop: '56.25%', // 16:9\r\n        borderRadius: '5px',\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    btn: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        padding: '5px 20px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        margin: '10px',\r\n        animation: 'animate__animated animate__bounce'\r\n    },\r\n    space: {\r\n        marginRight: '10px',\r\n    }\r\n}));\r\n\r\nconst GifGridList = ({ id, image, title }) => {\r\n\r\n    const classes = useStyles();\r\n    const [likes, setLikes] = useState(0);\r\n    const [disLike, setdisLike] = useState(0);\r\n\r\n    return (\r\n        <Grid item xs={12} sm={6} md={4} xl={3} key={id}>\r\n            <Card className={classes.root}>\r\n\r\n                <CardMedia\r\n                    className={`${classes.media}`}\r\n                    image={image}\r\n                    loading=\"lazy\"\r\n                />\r\n\r\n                <CardContent>\r\n                    <Typography variant=\"body1\" color=\"textPrimary\" component=\"p\">\r\n                        {title}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                <CardActions disableSpacing>\r\n                    <Button variant=\"contained\" fullWidth className={classes.btn} onClick={ () => setLikes(likes + 1) }>\r\n                        <ThumbUpAltIcon className={ classes.space }/>  { likes }\r\n                    </Button>\r\n                    <Button variant=\"contained\" fullWidth className={classes.btn} onClick={ () => setdisLike(disLike + 1) }>\r\n                        <ThumbDownIcon className={ classes.space }/> { disLike }\r\n                    </Button>\r\n                </CardActions>\r\n\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nGifGridList.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default GifGridList;\r\n","\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getGif = async (categories, lim) => {\r\n    const API_KEY = '2MynF7hU61bkYIZDxSaB22EmCIl33L1r';\r\n    const API_URL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categories)}&limit=${lim}&api_key=${API_KEY}`;\r\n    const res = await fetch(API_URL);\r\n    const { data } = await res.json();\r\n    const gifs = data.map(res => {\r\n        return {\r\n            id: res.id,\r\n            image: res.images?.downsized_large.url,\r\n            title: res?.title,\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n};\r\n\r\ngetGif.propTypes = {\r\n    categories: PropTypes.string.isRequired,\r\n    lim: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default getGif;","import { useState, useEffect } from \"react\";\r\nimport getGits from '../helpers/getGifs';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const useFetchGifs = ( categories, lim ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGits( categories, lim )\r\n        .then( data => setState({ data: data, loading: false }))\r\n        .catch(err => console.err(err));\r\n\r\n    }, [categories, lim]);\r\n\r\n\r\n    return state;\r\n};\r\n\r\nuseFetchGifs.propTypes = {\r\n    categories: PropTypes.string.isRequired,\r\n    lim: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { Grid } from '@material-ui/core';\r\nimport GifGridList from './GifGridList';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GifGrid = ({ categories, lim }) => {\r\n\r\n const { data, loading } = useFetchGifs( categories, lim );\r\n\r\n    return (\r\n        <>\r\n        { loading ? <h2 className=\"title\">Loading..</h2>:  <h2 className=\"title\"> Topic: { categories } | Limit: { lim } </h2> }\r\n       \r\n             <Grid container>\r\n                {\r\n                    data.map( gif => (\r\n                       <GifGridList key={ gif.id } { ...gif } />\r\n                    ))\r\n                }\r\n            </Grid> \r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    categories: PropTypes.string.isRequired,\r\n    lim: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default GifGrid;\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport NavBar from './components/NavBar';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState('gif');\r\n    const [lim, setLim] = useState('12');\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <AddCategory setCategories={ setCategories } setLim={ setLim }/>\r\n            <hr />\r\n\r\n            <GifGrid categories={ categories } lim={ lim }/> \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}